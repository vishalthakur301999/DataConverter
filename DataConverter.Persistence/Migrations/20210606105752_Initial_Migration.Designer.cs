// <auto-generated />
using System;
using DataConverter.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataConverter.Persistence.Migrations
{
    [DbContext(typeof(ConverterContext))]
    [Migration("20210606105752_Initial_Migration")]
    partial class Initial_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataConverter.Domain.Entities.Aircraft", b =>
                {
                    b.Property<Guid>("AircraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BusinessClassSeats")
                        .HasColumnType("int");

                    b.Property<int>("EconomyClassSeats")
                        .HasColumnType("int");

                    b.Property<int>("FirstClassSeats")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerAirline")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PremiumEconomyClassSeats")
                        .HasColumnType("int");

                    b.Property<string>("YearOfDelivery")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.HasKey("AircraftId");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("DataConverter.Domain.Entities.Airport", b =>
                {
                    b.Property<Guid>("AirportCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirportCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AirportCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInternational")
                        .HasColumnType("bit");

                    b.HasKey("AirportCode");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("DataConverter.Domain.Entities.Amenities", b =>
                {
                    b.Property<Guid>("AmenitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaggageLimit")
                        .HasColumnType("int");

                    b.Property<double>("CancellationCharges")
                        .HasColumnType("float");

                    b.Property<double>("FlightChangeCharges")
                        .HasColumnType("float");

                    b.Property<bool>("InFlightEntertainment")
                        .HasColumnType("bit");

                    b.Property<bool>("MealsProvided")
                        .HasColumnType("bit");

                    b.HasKey("AmenitiesId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("DataConverter.Domain.Entities.Flight", b =>
                {
                    b.Property<Guid>("FLightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArrivalTime")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("DeptTime")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("DesignatedAircraftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DesignatedPilotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationAirportCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DestinationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fare")
                        .HasColumnType("float");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("ProvidedAmenitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceAirportCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SourceCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FLightId");

                    b.HasIndex("DesignatedAircraftId");

                    b.HasIndex("DesignatedPilotId");

                    b.HasIndex("DestinationAirportCode");

                    b.HasIndex("ProvidedAmenitiesId");

                    b.HasIndex("SourceAirportCode");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("DataConverter.Domain.Entities.Pilot", b =>
                {
                    b.Property<Guid>("PilotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("PilotId");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("DataConverter.Domain.Entities.Flight", b =>
                {
                    b.HasOne("DataConverter.Domain.Entities.Aircraft", "DesignatedAircraft")
                        .WithMany()
                        .HasForeignKey("DesignatedAircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataConverter.Domain.Entities.Pilot", "DesignatedPilot")
                        .WithMany()
                        .HasForeignKey("DesignatedPilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataConverter.Domain.Entities.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAirportCode");

                    b.HasOne("DataConverter.Domain.Entities.Amenities", "ProvidedAmenities")
                        .WithMany()
                        .HasForeignKey("ProvidedAmenitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataConverter.Domain.Entities.Airport", "Source")
                        .WithMany()
                        .HasForeignKey("SourceAirportCode");

                    b.Navigation("DesignatedAircraft");

                    b.Navigation("DesignatedPilot");

                    b.Navigation("Destination");

                    b.Navigation("ProvidedAmenities");

                    b.Navigation("Source");
                });
#pragma warning restore 612, 618
        }
    }
}
